@model List<CapaDatosWeb.Modelado.Producto>

@{ ViewBag.Title = "Lista de Productos";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string descripcion = "Lista de Productos"; }

<h2 class="text-center my-3">Gestión de Productos</h2>

<div class="card shadow">
    <div class="card-header bg-body-secondary">
        <h5 class="m-0 font-weight-bold text-black"><i class="fas fa-boxes me-2"></i><strong>@descripcion</strong></h5>
    </div>
    <div class="card-body">
        <div class="d-flex justify-content-between mb-3">
            <button class="btn btn-success btn-sm fw-bold" style="font-weight:700" data-bs-toggle="modal" data-bs-target="#mdlProductoAdd" onclick="AbrirModalProducto(null)">
                <i class="fas fa-plus-circle me-2"></i>Nuevo Producto
            </button>
        </div>
        <div>
            <table id="tbdataProducto" class="table table-hover table-bordered table-striped  nowrap compact" style="width:100%">
                <thead class="bg-body-secondary">
                    <tr class="text-success-emphasis">
                        <th class="text-center">Id</th>
                        <th class="text-center">Código</th>
                        <th class="text-center">Imagen</th>
                        <th class="text-center">Descripción</th>
                        <th class="text-center">Precio Compra</th>
                        <th class="text-center">Precio Venta</th>
                        <th class="text-center">Stock</th>
                        <th class="text-center">Estado</th>
                        <th class="text-center">Acciones</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="mdlProductoAdd" tabindex="-1" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <!-- Header -->
            <div class="modal-header bg-black font-weight-bold text-white">
                <h5 class="modal-title">Detalle Producto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Body -->
            <div class="modal-body">
                <fieldset class="border p-3 mb-2">
                    <form id="formProducto" class="row">
                        <input type="hidden" id="productoId" value="0" />

                        <div class="col-sm-3">
                            <div class="mb-2">
                                <img id="imgProducto" height="100" width="100" class="border rounded mx-auto d-block img-fluid" alt="Imagen del producto">
                            </div>
                            <div class="mb-2">
                                <label for="txtImagen" class="form-label"></label>
                                <input class="form-control-file" type="file" id="txtImagen" accept="image/pnj, image/jpg, image/jpeg">
                            </div>
                        </div>

                        <div class="col-sm-3">
                            <div class="mb-3">
                                <label for="txtCodigoBarra" class="form-label" style="font-weight:bold">Código Barra</label>
                                <input type="text" class="form-control form-control-sm input-validar" id="txtCodigoBarra" name="Codigo Barra" required>
                            </div>
                            <div class="mb-3">
                                <label for="txtDescripcion" class="form-label" style="font-weight:bold">Descripción</label>
                                <textarea type="text" class="form-control form-control-sm input-validar" id="txtDescripcion" name="Descripcion" required></textarea>
                            </div>
                            <div class="mb-3">
                                <label for="cboCategoria" class="form-label" style="font-weight:bold">Categoría</label>
                                <select class="form-control form-control-sm" id="cboCategoria">
                                    <option value="0">Seleccionar</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-sm-3">
                            <div class="mb-3">
                                <label for="txtStock" class="form-label" style="font-weight:bold">Stock</label>
                                <input type="number" class="form-control form-control-sm input-validar" id="txtStock" name="Stock">
                            </div>
                            <div class="mb-3">
                                <label for="cboEstado" class="form-label" style="font-weight:bold">Estado</label>
                                <select class="form-control form-control-sm" id="cboEstado">
                                    <option value="1">Activo</option>
                                    <option value="0">No Activo</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-sm-3">
                            <div class="mb-3">
                                <label for="txtPrecioVenta" class="form-label" style="font-weight:bold">Precio Venta</label>
                                <input type="number" step="0.01" class="form-control form-control-sm input-validar" id="txtPrecioVenta" name="PrecioVenta">
                            </div>
                            <div class="mb-3">
                                <label for="txtPrecioCompra" class="form-label" style="font-weight:bold">Precio Compra</label>
                                <input type="number" step="0.01" class="form-control form-control-sm input-validar" id="txtPrecioCompra" name="PrecioCompra">
                            </div>
                        </div>
                    </form>
                </fieldset>
            </div>

            <!-- Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-primary btn-sm" onclick="GuardarProducto()">Guardar</button>
                <button type="button" class="btn btn-danger btn-sm" data-bs-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        // Inicialización DataTable
        function initDataTable() {
            return $("#tbdataProducto").DataTable({
                responsive: true,
                ordering: false,
                ajax: {
                    url: '@Url.Action("ListarProducto", "Producto")',
                    type: "GET",
                    dataType: "json",
                    dataSrc: ""
                },
                columns: [
                    { data: "Codigo" },
                    { data: "Descripcion" },
                    { data: "PrecioVenta" },
                    { data: "PrecioCompra" },
                    { data: "Stock" },
                    {
                        data: "Estado",
                        render: renderEstado
                    },
                    {
                        data: "Imagen",
                        render: renderImagen
                    },
                    {
                        data: null,
                        render: renderAcciones,
                        orderable: false,
                        searchable: false,
                        width: "80px"
                    }
                ],
                language: {
                    url: "https://cdn.datatables.net/plug-ins/1.11.3/i18n/es_es.json"
                }
            });
        }

        // Renderizar Estado
        function renderEstado(valor) {
            return valor
                ? '<span class="badge bg-success">Activo</span>'
                : '<span class="badge bg-warning">No Activo</span>';
        }

        // Renderizar Imagen
        function renderImagen(imagen) {
            return imagen
                ? `<img src="${imagen}" alt="Imagen" style="width:50px; height:50px; object-fit:cover;" />`
                : "No disponible";
        }

        // Renderizar Acciones
        function renderAcciones(data, type, row) {
            return `
                <button class="btn btn-primary btn-sm" onclick="AbrirModalProducto(${JSON.stringify(row)})">
                    <i class="fas fa-pen"></i>
                </button>
                <button class="btn btn-danger btn-sm ms-2" onclick="EliminarProducto(${row.Id})">
                    <i class="fas fa-trash"></i>
                </button>`;
        }

        // Abrir Modal
        function AbrirModalProducto(data = null) {
            LimpiarCampos();
            if (data) cargarDatosProducto(data);
            $("#mdlProductoAdd").modal("show");
        }

        // Cargar Datos en Modal
        function cargarDatosProducto(data) {
            $("#productoId").val(data.Id);
            $("#txtCodigoBarra").val(data.Codigo);
            $("#txtDescripcion").val(data.Descripcion);
            $("#txtPrecioVenta").val(data.PrecioVenta);
            $("#txtPrecioCompra").val(data.PrecioCompra);
            $("#txtStock").val(data.Stock);
            $("#cboEstado").val(data.Estado ? "1" : "0");
            $("#imgProducto").attr("src", data.Imagen || "").show();
        }

        // Limpiar Campos
        function LimpiarCampos() {
            $("#formProducto")[0].reset();
            $("#productoId").val(0);
            $("#imgProducto").hide().removeAttr("src");
        }

        // Guardar Producto
        async function GuardarProducto() {
            const formData = new FormData($("#formProducto")[0]);
            formData.append("Estado", $("#cboEstado").val() === "1");

            if (!validarFormulario()) return;

            try {
                const response = await $.ajax({
                    url: '@Url.Action("GuardarProducto", "Producto")',
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: formData
                });

                Swal.fire(response.success ? "Éxito" : "Error", response.message, response.success ? "success" : "error");
                if (response.success) {
                    $("#mdlProductoAdd").modal("hide");
                    dataTable.ajax.reload();
                }
            } catch {
                Swal.fire("Error", "Ocurrió un error al guardar el producto.", "error");
            }
        }

        // Validación de formulario
        function validarFormulario() {
            let valido = true;
            $(".input-validar").each(function () {
                if (!$(this).val().trim()) {
                    $(this).addClass("is-invalid");
                    $(this).next('.invalid-feedback').remove(); // Eliminar mensajes anteriores
                    $(this).after('<div class="invalid-feedback">Este campo es obligatorio.</div>');
                    valido = false;
                } else {
                    $(this).removeClass("is-invalid");
                    $(this).next('.invalid-feedback').remove(); // Eliminar mensajes anteriores
                }
            });
            return valido;
        }

        // Llenar dropdown de categorías
        function cargarCategorias() {
            $.ajax({
                url: '@Url.Action("ObtenerCategorias", "Producto")',
                type: "GET",
                success: function (data) {
                    const cboCategoria = $("#cboCategoria");
                    cboCategoria.empty();
                    cboCategoria.append('<option value="0">Seleccionar</option>');
                    data.forEach(categoria => {
                        cboCategoria.append(`<option value="${categoria.Id}">${categoria.Descripcion}</option>`);
                    });
                },
                error: function () {
                    Swal.fire("Error", "No se pudieron cargar las categorías.", "error");
                }
            });
        }

        $('#txtImagen').on('change', function () {
            let formData = new FormData();
            let imagen = $(this)[0].files[0];

            formData.append('imagen', imagen);

            $.ajax({
                url: '@Url.Action("GuardarImagen", "Producto")',
                type: 'POST',
                processData: false,
                contentType: false,
                data: formData,
                success: function (response) {
                    if (response.success) {
                        // Mostrar vista previa de la imagen
                        $('#imgProducto').attr('src', response.ruta);
                        $('#imgProducto').data('ruta', response.ruta); // Almacena la ruta para usarla al guardar
                    } else {
                        Swal.fire("Error", response.message, "error");
                    }
                },
                error: function () {
                    Swal.fire("Error", "Ocurrió un error al subir la imagen.", "error");
                }
            });
        });

         // Eliminar producto
        function EliminarProducto(id) {
            Swal.fire({
                title: "¿Estás seguro?",
                text: "No podrás revertir esta acción.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Sí, eliminar"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("EliminarProducto", "Producto")',
                        type: "POST",
                        data: { id },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire("Eliminado", "Producto eliminado correctamente.", "success");
                                dataTable.ajax.reload();
                            } else {
                                Swal.fire("Error", response.message, "error");
                            }
                        },
                        error: function () {
                            Swal.fire("Error", "Ocurrió un error al eliminar el producto.", "error");
                        }
                    });
                }
            });

        }

        // Configuración Inicial
        let dataTable;
        $(document).ready(() => {
            dataTable = initDataTable();
            cargarCategorias();
        });
    </script>
}